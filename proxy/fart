---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
data:
  nginx.conf: |
    worker_processes 1;
    events { worker_connections 1024; }
    http{
      sendfile on;
      large_client_header_buffers 4 32k;

      upstream frontend-app {
        server frontend:80;
      } 

      upstream pma {
        server phpmyadmin:80;
      }

      server {
        listen 80;
        server_name localhost;

        location / {
          return 301 https://$host$request_uri;
        }
      }

      server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/private/localhost.key;

        location = /pma {
          return 301 /pma/;
        }
        location ^~ /pma/ {
          proxy_pass http://pma/;
          proxy_redirect off;
          proxy_http_version 1.1;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Host $server_name;
          proxy_buffer_size 128k;
          proxy_buffers 4 256k;
          proxy_busy_buffers_size 256k;
        }

        location / {
          proxy_pass http://frontend-app;
          proxy_redirect off; 
          proxy_http_version 1.1;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Host $server_name;
          proxy_buffer_size 128k;
          proxy_buffers 4 256k;
          proxy_busy_buffers_size 256k;
        }
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: nginx-tls
  namespace: default
type: kubernetes.io/tls
data:
  tls.crt: <BASE64_ENCODED_CERT>
  tls.key: <BASE64_ENCODED_KEY>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-proxy
  template:
    metadata:
      labels:
        app: nginx-proxy
    spec:
      containers:
        - name: nginx
          image: nginx:stable
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: tls-certs
              mountPath: /etc/ssl/certs/localhost.crt
              subPath: tls.crt
              readOnly: true
            - name: tls-certs
              mountPath: /etc/ssl/private/localhost.key
              subPath: tls.key
              readOnly: true
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
        - name: tls-certs
          secret:
            secretName: nginx-tls

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-proxy
  namespace: default
spec:
  selector:
    app: nginx-proxy
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
    - port: 443
      targetPort: 443
      protocol: TCP
      name: https
  type: LoadBalancer
